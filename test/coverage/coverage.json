{
  "instrumentation": "node-jscoverage",
  "sloc": 24,
  "hits": 24,
  "misses": 0,
  "coverage": 100,
  "files": [
    {
      "filename": "c:/Work/sellside/strings/lib/strings.js",
      "coverage": 100,
      "hits": 24,
      "misses": 0,
      "sloc": 24,
      "source": {
        "1": {
          "source": "/**",
          "coverage": ""
        },
        "2": {
          "source": " * Sellside",
          "coverage": ""
        },
        "3": {
          "source": " *",
          "coverage": ""
        },
        "4": {
          "source": " * Sellside <http://www.sellside.com>",
          "coverage": ""
        },
        "5": {
          "source": " * Created and maintained by Jon Schlinkert and Brian Woodward",
          "coverage": ""
        },
        "6": {
          "source": " *",
          "coverage": ""
        },
        "7": {
          "source": " * Copyright (c) 2013 Sellside.",
          "coverage": ""
        },
        "8": {
          "source": " * Licensed under the MIT License (MIT).",
          "coverage": ""
        },
        "9": {
          "source": " */",
          "coverage": ""
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "var _ = require('lodash');",
          "coverage": 1
        },
        "12": {
          "source": "",
          "coverage": ""
        },
        "13": {
          "source": "var Strings = function(structure, options) {",
          "coverage": 1
        },
        "14": {
          "source": "  this.structure = structure || '';",
          "coverage": 7
        },
        "15": {
          "source": "  this.options = options || {};",
          "coverage": 7
        },
        "16": {
          "source": "  this.middleware = [];",
          "coverage": 7
        },
        "17": {
          "source": "};",
          "coverage": ""
        },
        "18": {
          "source": "",
          "coverage": ""
        },
        "19": {
          "source": "var strings = module.exports = function(structure, options) {",
          "coverage": 1
        },
        "20": {
          "source": "  return new Strings(structure, options);",
          "coverage": 7
        },
        "21": {
          "source": "};",
          "coverage": ""
        },
        "22": {
          "source": "",
          "coverage": ""
        },
        "23": {
          "source": "var extend = function(middleware) {",
          "coverage": 1
        },
        "24": {
          "source": "  return function(context) {",
          "coverage": 6
        },
        "25": {
          "source": "    return _.extend(context, middleware());",
          "coverage": 3
        },
        "26": {
          "source": "  };",
          "coverage": ""
        },
        "27": {
          "source": "};",
          "coverage": ""
        },
        "28": {
          "source": "",
          "coverage": ""
        },
        "29": {
          "source": "var remove = function(middleware) {",
          "coverage": 1
        },
        "30": {
          "source": "  return function(context) {",
          "coverage": 3
        },
        "31": {
          "source": "    return _.omit(context, middleware());",
          "coverage": 1
        },
        "32": {
          "source": "  };",
          "coverage": ""
        },
        "33": {
          "source": "};",
          "coverage": ""
        },
        "34": {
          "source": "",
          "coverage": ""
        },
        "35": {
          "source": "Strings.prototype.use = function(middleware) {",
          "coverage": 1
        },
        "36": {
          "source": "  this.middleware.push(extend(middleware));",
          "coverage": 6
        },
        "37": {
          "source": "  return this;",
          "coverage": 6
        },
        "38": {
          "source": "};",
          "coverage": ""
        },
        "39": {
          "source": "",
          "coverage": ""
        },
        "40": {
          "source": "Strings.prototype.exclude = function(middleware) {",
          "coverage": 1
        },
        "41": {
          "source": "  this.middleware.push(remove(middleware));",
          "coverage": 3
        },
        "42": {
          "source": "  return this;",
          "coverage": 3
        },
        "43": {
          "source": "};",
          "coverage": ""
        },
        "44": {
          "source": "",
          "coverage": ""
        },
        "45": {
          "source": "Strings.prototype.context = function() {",
          "coverage": 1
        },
        "46": {
          "source": "  return _.reduce(this.middleware, function(ctx, middleware) {",
          "coverage": 3
        },
        "47": {
          "source": "    return middleware(ctx);",
          "coverage": 4
        },
        "48": {
          "source": "  }, {});",
          "coverage": ""
        },
        "49": {
          "source": "};",
          "coverage": ""
        },
        "50": {
          "source": "",
          "coverage": ""
        },
        "51": {
          "source": "Strings.prototype.run = function(options) {",
          "coverage": 1
        },
        "52": {
          "source": "  return _.template(this.structure, this.context());",
          "coverage": 2
        },
        "53": {
          "source": "};",
          "coverage": ""
        },
        "54": {
          "source": "",
          "coverage": ""
        },
        "55": {
          "source": "",
          "coverage": ""
        }
      }
    }
  ],
  "stats": {
    "suites": 4,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2013-12-09T18:18:39.994Z",
    "end": "2013-12-09T18:18:40.000Z",
    "duration": 6
  },
  "tests": [
    {
      "title": "should save the structure",
      "fullTitle": "strings structure should save the structure",
      "duration": 1
    },
    {
      "title": "should add middleware with use",
      "fullTitle": "strings middleware should add middleware with use",
      "duration": 0
    },
    {
      "title": "should add middleware with exclude",
      "fullTitle": "strings middleware should add middleware with exclude",
      "duration": 0
    },
    {
      "title": "should build context from middleware",
      "fullTitle": "strings middleware should build context from middleware",
      "duration": 0
    },
    {
      "title": "should build context from middleware with exclusions",
      "fullTitle": "strings middleware should build context from middleware with exclusions",
      "duration": 0
    },
    {
      "title": "should build the final string with no exclusions",
      "fullTitle": "strings run should build the final string with no exclusions",
      "duration": 1
    },
    {
      "title": "should throw error with exclusions",
      "fullTitle": "strings run should throw error with exclusions",
      "duration": 1
    }
  ],
  "failures": [],
  "passes": [
    {
      "title": "should save the structure",
      "fullTitle": "strings structure should save the structure",
      "duration": 1
    },
    {
      "title": "should add middleware with use",
      "fullTitle": "strings middleware should add middleware with use",
      "duration": 0
    },
    {
      "title": "should add middleware with exclude",
      "fullTitle": "strings middleware should add middleware with exclude",
      "duration": 0
    },
    {
      "title": "should build context from middleware",
      "fullTitle": "strings middleware should build context from middleware",
      "duration": 0
    },
    {
      "title": "should build context from middleware with exclusions",
      "fullTitle": "strings middleware should build context from middleware with exclusions",
      "duration": 0
    },
    {
      "title": "should build the final string with no exclusions",
      "fullTitle": "strings run should build the final string with no exclusions",
      "duration": 1
    },
    {
      "title": "should throw error with exclusions",
      "fullTitle": "strings run should throw error with exclusions",
      "duration": 1
    }
  ]
}